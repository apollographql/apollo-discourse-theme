<div id="autocomplete" ></div>
<div id="autocomplete-panel-container"></div>


<script>
    const { autocomplete, getAlgoliaResults } = window['@algolia/autocomplete-js'];
    const { algoliasearch } = window['algoliasearch'];
    //console.log('algoliasearch', algoliasearch);
    const searchClient = algoliasearch(
        'Q0CJ63JM7B',
        'e6996c1be6825141605220623fb10646'
    );

    autocomplete({
        container: '#autocomplete',
        panelContainer: '#autocomplete-panel-container',
        debug: false,
        openOnFocus: true,
        placeholder: 'Search Apollo documentation, definitions, tutorials and more',
        insights: true,
        detachedMediaQuery: 'none',
        defaultActiveItemId: 0,
        onSubmit({state, event}) {
            console.log('onSubmit', state, event);
            event.preventDefault();

            const allItems = state.collections.flatMap((collection) => collection.items);
            const item = allItems[state.activeItemId];

            if (!item) {
                return;
            }

            const url = new URL(item.url, window.location.origin);

            if (url.hostname === window.location.hostname) {
                window.location.href = url.href;
            } else {
                window.open(url.href, '_blank');
            }
        },
        onSelect({ item, event }) {
            console.log('onSelect', item, event);
            event.preventDefault();

            const url = new URL(item.url, window.location.origin);

            if (url.hostname === window.location.hostname) {
                window.location.href = url.href;
            } else {
                window.open(url.href, '_blank');
            }
        },
        getSources({ query }) {
            return [{
                sourceId: 'discourse',
                getItems() {
                    return getAlgoliaResults({
                        searchClient,
                        queries: [
                            {
                                indexName: 'discourse',
                                query,
                                params: {
                                    hitsPerPage: 6,
                                    attributesToSnippet: ['cooked:25'],
                                    snippetEllipsisText: '…',
                                },
                            },
                        ],

                    });
                }, templates: {
                    header({ html }) {
                        return html`<h2>Discourse Topics</h2>`;
                    },
                    item({ item, components, html }) {
                        return html`<div class="aa-item" data-url="https://community.apollographql.com/t/${item.topic_slug}">
                                <h3>${components.Highlight({ hit: item, attribute: 'topicTitle' })}</h3>
                                <p>${components.Snippet({ hit: item, attribute: 'cooked'})}</p>
                         </div>`;
                    },
                },
            },
            {
                sourceId: 'docs',
                getItems() {
                    return getAlgoliaResults({
                        searchClient,
                        queries: [
                            {
                                indexName: 'docs',
                                query,
                                params: {
                                    hitsPerPage: 3,
                                    attributesToSnippet: ['text:25'],
                                    snippetEllipsisText: '…',
                                },
                            },
                        ],

                    });
                }, templates: {
                    header({ html }) {
                        return html`<h2>Documentation</h2>`;
                    },
                    item({ item, components, html }) {
                        return html`<div class="aa-item" data-url="${item.url}">
                                <h3>${components.Highlight({ hit: item, attribute: 'title', })}</h3>
                                <p>${components.Snippet({ hit: item, attribute: 'text', })}</p>
                         </div>`;
                    },
                    noResults() {
                        return "Sorry, we couldn't find any result for your search.";
                    },
                },
            },
            {
                sourceId: 'apollopedia',
                getItems() {
                    return getAlgoliaResults({
                        searchClient,
                        queries: [
                            {
                                indexName: 'apollopedia',
                                query,
                                params: {
                                    hitsPerPage: 2,
                                    filters: 'internalOnly:false'
                                },
                            },
                        ],

                    });
                }, templates: {
                    header({ html }) {
                        return html`<h2>Definitions</h2>`;
                    },
                    item({ item, components, html }) {
                        return html`<div class="aa-item" data-url="${item.url}">
                                <h3>${components.Highlight({ hit: item, attribute: 'term', })}</h3>
                                <p>${components.Snippet({ hit: item, attribute: 'text', })}</p>
                         </div>`;
                    },
                },
            },
            ];
        },
    });
</script>

